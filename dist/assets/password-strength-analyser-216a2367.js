import{b as m,d as v,n as x,a as _,o as l,e as d,i as p,g as h,x as k,w as g,f as i,t as f,F as w,r as b,l as U,y as I,z as L}from"./index-bdafdd1b.js";function C(e){const[s,n]=e.toString().split("e"),a=Number.parseFloat(s),o=a%1===0?a.toLocaleString():a.toFixed(2);return n?`${o}e${n}`:o}function F({seconds:e}){if(e<=.001)return"Instantly";if(e<=1)return"Less than a second";const s=[{unit:"millenium",secondsInUnit:31536e6,format:C,plural:"millennia"},{unit:"century",secondsInUnit:31536e5,plural:"centuries"},{unit:"decade",secondsInUnit:31536e4,plural:"decades"},{unit:"year",secondsInUnit:31536e3,plural:"years"},{unit:"month",secondsInUnit:2592e3,plural:"months"},{unit:"week",secondsInUnit:604800,plural:"weeks"},{unit:"day",secondsInUnit:86400,plural:"days"},{unit:"hour",secondsInUnit:3600,plural:"hours"},{unit:"minute",secondsInUnit:60,plural:"minutes"},{unit:"second",secondsInUnit:1,plural:"seconds"}];return m.chain(s).map(({unit:n,secondsInUnit:a,plural:o,format:t=m.identity})=>{const r=Math.floor(e/a);return e%=a,r<=0?void 0:`${t(r)} ${r>1?o:n}`}).compact().take(2).join(", ").value()}function N({password:e,guessesPerSecond:s=1e9}){const n=D({password:e}),a=e.length,o=e===""?0:Math.log2(n)*a,t=2**o/s,r=F({seconds:t}),u=Math.min(o/128,1);return{entropy:o,charsetLength:n,passwordLength:a,crackDurationFormatted:r,secondsToCrack:t,score:u}}function D({password:e}){const s=/[a-z]/.test(e),n=/[A-Z]/.test(e),a=/\d/.test(e),o=/\W|_/.test(e);let t=0;return s&&(t+=26),n&&(t+=26),a&&(t+=10),o&&(t+=32),t}const E={flex:"","flex-col":"","gap-3":""},M={"text-2xl":"","data-test-id":"crack-duration"},S={"flex-1":"","text-right":"","op-60":""},T={"flex-1":"","text-left":""},B=v({__name:"password-strength-analyser",setup(e){const s=x(""),n=_(()=>N({password:s.value})),a=_(()=>[{label:"Password length:",value:n.value.passwordLength},{label:"Entropy:",value:Math.round(n.value.entropy*100)/100},{label:"Character set size:",value:n.value.charsetLength},{label:"Score:",value:`${Math.round(n.value.score*100)} / 100`}]);return(o,t)=>{const r=I,u=L;return l(),d("div",E,[p(r,{value:h(s),"onUpdate:value":t[0]||(t[0]=c=>k(s)?s.value=c:null),type:"password",placeholder:"Enter a password...",clearable:"",autofocus:"","raw-text":"","test-id":"password-input"},null,8,["value"]),p(u,{"text-center":""},{default:g(()=>[t[1]||(t[1]=i("div",{"op-60":""}," Duration to crack this password with brute force ",-1)),i("div",M,f(h(n).crackDurationFormatted),1)]),_:1}),p(u,null,{default:g(()=>[(l(!0),d(w,null,b(h(a),({label:c,value:y})=>(l(),d("div",{key:c,flex:"","gap-3":""},[i("div",S,f(c),1),i("div",T,f(y),1)]))),128))]),_:1}),t[2]||(t[2]=i("div",{"op-70":""},[i("span",{"font-bold":""},"Note: "),U(" The computed strength is based on the time it would take to crack the password using a brute force approach, it does not take into account the possibility of a dictionary attack. ")],-1))])}}});export{B as default};
