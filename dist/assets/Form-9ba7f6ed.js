import{f as j,a as C}from"./FormItem-046fb30e.js";import{E as w,H as M,D as S,d as O,I as k,J as _,aP as B,n as L,at as I,P as R,bL as x}from"./index-bdafdd1b.js";const E=w("form",[M("inline",`
 width: 100%;
 display: inline-flex;
 align-items: flex-start;
 align-content: space-around;
 `,[w("form-item",{width:"auto",marginRight:"18px"},[S("&:last-child",{marginRight:0})])])]);var F=globalThis&&globalThis.__awaiter||function(t,m,o,i){function h(s){return s instanceof o?s:new o(function(l){l(s)})}return new(o||(o=Promise))(function(s,l){function v(n){try{e(i.next(n))}catch(d){l(d)}}function r(n){try{e(i.throw(n))}catch(d){l(d)}}function e(n){n.done?s(n.value):h(n.value).then(v,r)}e((i=i.apply(t,m||[])).next())})};const V=Object.assign(Object.assign({},_.props),{inline:Boolean,labelWidth:[Number,String],labelAlign:String,labelPlacement:{type:String,default:"top"},model:{type:Object,default:()=>{}},rules:Object,disabled:Boolean,size:String,showRequireMark:{type:Boolean,default:void 0},requireMarkPlacement:String,showFeedback:{type:Boolean,default:!0},onSubmit:{type:Function,default:t=>{t.preventDefault()}},showLabel:{type:Boolean,default:void 0},validateMessages:Object}),$=O({name:"Form",props:V,setup(t){const{mergedClsPrefixRef:m}=k(t);_("Form","-form",E,B,t,m);const o={},i=L(void 0),h=r=>{const e=i.value;(e===void 0||r>=e)&&(i.value=r)};function s(r){return F(this,arguments,void 0,function*(e,n=()=>!0){return yield new Promise((d,P)=>{const y=[];for(const u of x(o)){const g=o[u];for(const a of g)a.path&&y.push(a.internalValidate(null,n))}Promise.all(y).then(u=>{const g=u.some(f=>!f.valid),a=[],c=[];u.forEach(f=>{var p,b;!((p=f.errors)===null||p===void 0)&&p.length&&a.push(f.errors),!((b=f.warnings)===null||b===void 0)&&b.length&&c.push(f.warnings)}),e&&e(a.length?a:void 0,{warnings:c.length?c:void 0}),g?P(a.length?a:void 0):d({warnings:c.length?c:void 0})})})})}function l(){for(const r of x(o)){const e=o[r];for(const n of e)n.restoreValidation()}}return I(j,{props:t,maxChildLabelWidthRef:i,deriveMaxChildLabelWidth:h}),I(C,{formItems:o}),Object.assign({validate:s,restoreValidation:l},{mergedClsPrefix:m})},render(){const{mergedClsPrefix:t}=this;return R("form",{class:[`${t}-form`,this.inline&&`${t}-form--inline`],onSubmit:this.onSubmit},this.$slots)}});export{$ as _};
